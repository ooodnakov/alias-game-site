{
  "nav": {
    "home": "Home",
    "decks": "Decks",
    "about": "About",
    "docs": "Docs",
    "upload": "Upload",
    "download": "Download APK",
    "menu": "Menu",
    "closeMenu": "Close menu"
  },
  "footer": {
    "madeWith": "Made with care for parties",
    "github": "GitHub",
    "issues": "Report an issue",
    "license": "MIT License"
  },
  "meta": {
    "landing": {
      "title": "Alioss – community decks & Android download",
      "description": "Browse curated decks for the Alioss word game, import them on Android, and upload your own contributions."
    },
    "decks": {
      "title": "Browse Alioss decks",
      "description": "Filter community-made Alioss decks by language, difficulty, categories, and tags."
    },
    "docsDeckFormat": {
      "title": "Author decks that work everywhere",
      "description": "Learn how the website, MariaDB storage, and Android app agree on the alioss-deck@1 contract."
    },
    "upload": {
      "title": "Upload an Alioss deck",
      "description": "Validate your Alioss deck JSON, add an optional cover, and share it with the community."
    },
    "about": {
      "title": "About the Alioss project",
      "description": "Learn how Alioss keeps gameplay private, how decks are moderated, and how to contribute."
    },
    "admin": {
      "title": "Moderate community decks",
      "description": "Review pending Alioss deck submissions and publish or reject them."
    }
  },
  "landing": {
    "hero": {
      "title": "Alioss – the offline party word game",
      "tagline": "Fast rounds, smart hints, and zero trackers.",
      "download": "Download APK",
      "note": "No telemetry, no ads, works offline.",
      "github": "Source on GitHub",
      "browseDecks": "Browse decks"
    },
    "features": {
      "title": "Why players love Alioss",
      "items": {
        "teams": {
          "title": "2–6 teams",
          "description": "Flexible scoring for couples or big gatherings."
        },
        "swipe": {
          "title": "Swipe controls",
          "description": "Mark correct or skip cards with one thumb."
        },
        "layout": {
          "title": "One-handed layout",
          "description": "Designed to be held and played by the host."
        },
        "target": {
          "title": "Score to target",
          "description": "Race teams to a configurable finish line."
        },
        "tutorial": {
          "title": "Tutorial overlays",
          "description": "Introduce new players with contextual tips."
        }
      }
    },
    "decks": {
      "title": "Fresh community decks",
      "subtitle": "Validated imports from trusted creators.",
      "viewAll": "Browse all decks"
    },
    "screenshots": {
      "title": "Peek inside the app",
      "captions": {
        "game": "Round timer with quick swipe scoring.",
        "filters": "Filter decks by language, category, and difficulty.",
        "history": "Graphs that show progress over the night."
      }
    },
    "cta": {
      "title": "Ready to play?",
      "download": "Get the Android app",
      "browse": "Explore decks",
      "github": "View source"
    }
  },
  "decks": {
    "title": "Deck gallery",
    "searchPlaceholder": "Search decks",
    "filters": {
      "language": "Language",
      "difficultyMin": "Min difficulty",
      "difficultyMax": "Max difficulty",
      "categories": "Categories",
      "tags": "Tags",
      "nsfw": "Show NSFW",
      "apply": "Apply filters",
      "reset": "Reset"
    },
    "empty": "No decks matched your filters.",
    "words": "words",
    "nsfw": "NSFW",
    "import": "Import to Alioss",
    "openInApp": "Open in Android app",
    "copyJson": "Copy JSON URL",
    "copied": "Copied!",
    "metadata": {
      "title": "Deck metadata",
      "language": "Language",
      "difficulty": "Difficulty",
      "categories": "Categories",
      "wordClasses": "Word classes",
      "tags": "Tags",
      "wordCount": "Word count",
      "sha256": "SHA-256 checksum",
      "created": "Created",
      "updated": "Updated",
      "nsfw": "Includes mature content"
    },
    "details": {
      "sample": "Sample words",
      "deepLink": "Deep link",
      "androidCta": "Scan with your Android camera or tap the link to start an import.",
      "qrCaption": "QR code opens the Alioss app"
    },
    "pagination": {
      "next": "Next",
      "previous": "Previous"
    },
    "back": "Back to gallery"
  },
  "upload": {
    "title": "Upload a deck",
    "intro": "Validate your deck JSON and share it with the community.",
    "jsonLabel": "Deck JSON file",
    "jsonHint": "Upload a JSON file that matches the Alioss schema.",
    "coverLabel": "Cover image URL",
    "coverHint": "Optional HTTPS image that represents your deck.",
    "submit": "Submit deck",
    "successPending": "Deck submitted! It will appear once approved.",
    "successPublished": "Deck published instantly! It's live in the gallery.",
    "error": "We could not process that deck. Check the JSON and try again.",
    "validation": {
      "required": "A JSON file is required.",
      "invalidJson": "The provided file is not valid JSON.",
      "schema": "Deck JSON failed validation.",
      "tooLarge": "Deck JSON file must be 5 MB or smaller."
    },
    "captchaLabel": "Verification",
    "captchaHint": "Complete the CAPTCHA challenge so we know you're human.",
    "serverErrors": {
      "captchaRequired": "Please complete the CAPTCHA challenge before submitting.",
      "captchaFailed": "CAPTCHA validation failed. Try again.",
      "rateLimit": "Too many uploads from your IP address. Please try again later."
    },
    "preview": {
      "heading": "Deck preview",
      "titleLabel": "Title",
      "wordsLabel": "Words",
      "invalid": "We couldn't read that deck. Double-check the JSON."
    }
  },
  "about": {
    "title": "About Alioss",
    "intro": "Alioss is a privacy-first party word game built by Aleksandr Odnakov.",
    "values": [
      "Offline-first gameplay. No accounts, no analytics.",
      "Community-driven decks moderated for quality.",
      "Open source app and website so anyone can contribute."
    ],
    "contact": "Questions or ideas? Open an issue on GitHub."
  },
  "docs": {
    "deckFormat": {
      "title": "Deck data contract",
      "intro": "Follow this guide to publish JSON that the website, MariaDB storage, and Android client all agree on.",
      "lastUpdated": "Last updated: April 2025",
      "sections": {
        "overview": {
          "heading": "How deck data flows",
          "body": [
            "Uploaders submit JSON that must satisfy the Zod schema before it is normalized and stored in MariaDB.",
            "Published rows expose a public JSON file that the Android app imports via the alioss:// deep link scheme."
          ]
        },
        "schemas": {
          "heading": "Zod validation rules",
          "body": [
            "Deck titles and authors are trimmed strings up to 100 characters, languages are currently limited to en or ru, and at least 20 unique words are required.",
            "Each word entry may optionally include difficulty, category, and wordClass metadata, and deck-level metadata tracks categories, wordClasses, and optional cover art URLs."
          ]
        },
        "mariadb": {
          "heading": "MariaDB columns",
          "body": [
            "Normalized decks are expanded into searchable columns including slug, word counts, category/tag arrays, and SHA-256 checksums for integrity.",
            "Published decks always point to a json_path that hosts the final payload consumed by the mobile app."
          ]
        },
        "payload": {
          "heading": "Produce alioss-deck@1 payloads",
          "body": [
            "Start from a normalized deck and publish it as alioss-deck@1. The Android importer treats DeckSchema JSON as version 1, but you may add a top-level format field when generating files manually.",
            "Expose the payload over HTTPS; the importer downloads the JSON referenced by the deep link and re-computes the checksum before adding the deck to local storage."
          ]
        },
        "validation": {
          "heading": "Creator checklist",
          "items": [
            "Validate JSON with the DeckSchema before uploading.",
            "Ensure categories, tags, and sample words are trimmed and deduplicated.",
            "Host the generated JSON at a stable URL and test the alioss:// import link on a device."
          ]
        }
      },
      "table": {
        "heading": "MariaDB → alioss-deck@1 mapping",
        "columns": {
          "mariadb": "MariaDB column",
          "mobile": "alioss-deck@1 field",
          "notes": "Notes"
        },
        "rows": {
          "slug": { "mariadb": "slug", "mobile": "slug", "notes": "Stable deck identifier shared across web and mobile." },
          "title": { "mariadb": "title", "mobile": "title", "notes": "Human-readable name displayed in both galleries." },
          "author": { "mariadb": "author", "mobile": "author", "notes": "Attribution shown on cards and in the app." },
          "language": { "mariadb": "language", "mobile": "language", "notes": "ISO language code that drives localization and filters." },
          "wordCount": { "mariadb": "word_count", "mobile": "words.length", "notes": "Calculated during normalization for fast queries." },
          "difficulty": { "mariadb": "difficulty_min/difficulty_max", "mobile": "derived metadata.difficulty", "notes": "Calculated from words[].difficulty to support filtering and pacing." },
          "categories": { "mariadb": "categories", "mobile": "metadata.categories", "notes": "JSON array persisted verbatim after trimming." },
          "wordClasses": { "mariadb": "word_classes", "mobile": "metadata.wordClasses", "notes": "Optional part-of-speech hints for the app UI." },
          "cover": { "mariadb": "cover_url", "mobile": "metadata.coverImage", "notes": "Optional HTTPS art rendered on the card and Android details." },
          "tags": { "mariadb": "tags", "mobile": "derived metadata.tags", "notes": "Populated from categories today; kept for future filter expansion." },
          "nsfw": { "mariadb": "nsfw", "mobile": "allowNSFW", "notes": "Boolean propagated to gate adult-friendly decks." },
          "jsonPath": { "mariadb": "json_path", "mobile": "download URL", "notes": "HTTP(S) endpoint the deep link resolves before import." },
          "sha256": { "mariadb": "sha256", "mobile": "metadata.sha256", "notes": "Expose alongside the deck to let clients verify payload integrity." }
        }
      },
      "exampleTitle": "Example alioss-deck@1 JSON",
      "exampleDescription": "Normalized deck payload that Android treats as alioss-deck@1.",
      "resources": {
        "heading": "Further references",
        "items": [
          "DeckSchema TypeScript definition",
          "MariaDB storage adapter",
          "URL builder utilities"
        ]
      }
    }
  },
  "admin": {
    "title": "Deck moderation",
    "intro": "Review pending uploads, approve quality decks, and reject those that don't fit the guidelines.",
    "signIn": {
      "title": "GitHub sign-in required",
      "description": "Sign in with GitHub to access the moderation queue.",
      "cta": "Sign in with GitHub"
    },
    "unauthorized": {
      "title": "You don't have access",
      "description": "You're signed in as {user}, but you're not on the moderation team.",
      "unknownUser": "this account"
    },
    "signOut": "Sign out",
    "refresh": "Refresh",
    "loading": "Loading pending decks…",
    "loadError": "Unable to load decks. Please try again.",
    "actionError": "We couldn't update that deck. Please try again.",
    "rejectionPrompt": "Provide a reason for rejecting this deck",
    "rejectionRequired": "A rejection reason is required.",
    "approve": "Approve",
    "reject": "Reject",
    "empty": "No decks are waiting for review.",
    "status": {
      "published": "Published",
      "pending": "Pending",
      "rejected": "Rejected"
    }
  },
  "notFound": {
    "title": "Page not found",
    "description": "The page you tried to open doesn't exist or has moved.",
    "ctaHome": "Go to homepage",
    "ctaDecks": "Browse decks"
  }
}
